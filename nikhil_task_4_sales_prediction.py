# -*- coding: utf-8 -*-
"""Nikhil task-4 Sales prediction

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1amTZ_1BxENBVVocbHAvVbeITHv6Ccv0E
"""

import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split,GridSearchCV,cross_val_score,KFold
from sklearn.linear_model import LinearRegression,Ridge,Lasso
from sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score

dg=pd.read_csv("/content/advertising.csv")

dg

dg.sample(8)

dg.sample

dg.shape

dg.isnull()

dg.isnull().sum()

dg.columns

dg

dg.shape

dg.info()

dg.size

dg.dtypes

dg.describe()

dg.duplicated()

dg.duplicated().sum()

plt.figure(figsize=[5,3])
plt.boxplot(dg,vert=False,data=dg,labels=dg.columns)
plt.show()

"""**Analysing data by histplot graph**"""

sns.histplot(dg['TV'])

sns.histplot(dg['Newspaper'])

sns.histplot(dg['Radio'])

sns.histplot(dg['Sales'])

"""**Analysing data by distplot graph**"""

sns.distplot(dg['Newspaper'])

sns.distplot(dg['TV'])

"""**Analyse data by pairplot graph**"""

sns.pairplot(dg)

sns.heatmap(dg.corr(),annot=True)

x=dg.iloc[:,:-1]
x

y = dg.iloc[:,-1:]

xtrain,xtest,ytrain,ytest  = train_test_split(x,y,test_size=0.3,random_state=50)

print(x.shape)
print(xtrain.shape)
print(xtest.shape)

xtrain,ytrain

xtest,ytest

model = LinearRegression()

model.fit(xtrain,ytrain)

ypredict=model.predict(xtest)
ypredict

model.score(xtrain,ytrain)*100

model.score(xtest,ytest)*100

mean_squared_error(ytest,ypredict)

mean_absolute_error(ytest,ypredict)

r2_score(ytest,ypredict)*100

r = np.sqrt(mean_squared_error(ytest,ypredict))
r

cv = KFold(n_splits=5,shuffle=True, random_state=0)
cv

score=cross_val_score(model,x,y,cv=cv,n_jobs=-1)
finalscore=np.mean(score)
finalscore